<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>꽝 스크래치 카드</title>
  <style>
    body {
      font-family: 'Arial', sans-serif;
      background: #fff0f5;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      flex-direction: column;
    }
    h2 {
      color: #ff4c4c;
    }
    #scratch-card {
      position: relative;
      width: 300px;
      height: 150px;
      border-radius: 20px;
      box-shadow: 0 0 10px #ffa8a8;
      overflow: hidden;
    }
    #prize-text {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 36px;
      font-weight: bold;
      color: #ff4c4c;
      z-index: 1;
    }
    canvas {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 2;
    }
  </style>
</head>
<body>

<h2>스크래치 카드를 긁어보세요! (무조건 꽝 💥)</h2>

<div id="scratch-card">
  <div id="prize-text">꽝!</div>
  <canvas id="scratch-canvas" width="300" height="150"></canvas>
</div>

<script>
  const canvas = document.getElementById('scratch-canvas');
  const ctx = canvas.getContext('2d');
  const img = new Image();
  img.src = '귀여운이미지.png'; // 여기에 귀여운 이미지 파일 이름을 넣으세요

  img.onload = () => {
    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
    ctx.globalCompositeOperation = 'destination-out';
  };

  let isDrawing = false;

  function getPos(e) {
    const rect = canvas.getBoundingClientRect();
    if (e.touches) {
      return {
        x: e.touches[0].clientX - rect.left,
        y: e.touches[0].clientY - rect.top
      };
    } else {
      return {
        x: e.clientX - rect.left,
        y: e.clientY - rect.top
      };
    }
  }

  function draw(e) {
    if (!isDrawing) return;
    const pos = getPos(e);
    ctx.beginPath();
    ctx.arc(pos.x, pos.y, 25, 0, Math.PI * 2);
    ctx.fill();
  }

  canvas.addEventListener('mousedown', () => isDrawing = true);
  canvas.addEventListener('mouseup', () => isDrawing = false);
  canvas.addEventListener('mousemove', draw);
  canvas.addEventListener('touchstart', (e) => { isDrawing = true; draw(e); e.preventDefault(); });
  canvas.addEventListener('touchend', () => isDrawing = false);
  canvas.addEventListener('touchmove', (e) => { draw(e); e.preventDefault(); });
</script>

</body>
</html>
